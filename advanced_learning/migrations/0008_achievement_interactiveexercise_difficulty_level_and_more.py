# Generated by Django 5.2 on 2025-04-08 16:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        (
            "advanced_learning",
            "0007_userproject_feedback_userproject_flashcard_sets_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "achievement_type",
                    models.CharField(
                        choices=[
                            ("exercise", "Hoàn thành bài tập"),
                            ("streak", "Chuỗi ngày liên tiếp"),
                            ("points", "Điểm số"),
                            ("completion", "Hoàn thành khóa học"),
                            ("special", "Thành tích đặc biệt"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        help_text="Tên biểu tượng Font Awesome", max_length=100
                    ),
                ),
                (
                    "points",
                    models.PositiveIntegerField(
                        default=0, help_text="Điểm thưởng khi đạt được thành tích"
                    ),
                ),
                (
                    "requirement",
                    models.JSONField(
                        default=dict, help_text="Yêu cầu để đạt được thành tích"
                    ),
                ),
                (
                    "is_hidden",
                    models.BooleanField(
                        default=False, help_text="Thành tích có ẩn không"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="difficulty_level",
            field=models.PositiveIntegerField(
                default=1, help_text="Độ khó của bài tập (1-5)"
            ),
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="game_config",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Cấu hình cho trò chơi học tập",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="hints",
            field=models.JSONField(
                blank=True, default=list, help_text="Gợi ý cho bài tập", null=True
            ),
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="is_public",
            field=models.BooleanField(
                default=True, help_text="Bài tập có công khai không"
            ),
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="points",
            field=models.PositiveIntegerField(
                default=10, help_text="Điểm thưởng khi hoàn thành bài tập"
            ),
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="programming_language",
            field=models.CharField(
                blank=True,
                choices=[
                    ("python", "Python"),
                    ("javascript", "JavaScript"),
                    ("java", "Java"),
                    ("cpp", "C++"),
                    ("csharp", "C#"),
                    ("php", "PHP"),
                    ("ruby", "Ruby"),
                    ("html_css", "HTML/CSS"),
                ],
                help_text="Ngôn ngữ lập trình cho bài tập code",
                max_length=20,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="simulation_config",
            field=models.JSONField(
                blank=True, default=dict, help_text="Cấu hình cho mô phỏng", null=True
            ),
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="starter_code",
            field=models.TextField(
                blank=True, help_text="Mã khởi đầu cho bài tập lập trình", null=True
            ),
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="test_cases",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Các trường hợp kiểm tra cho bài tập lập trình",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="time_limit",
            field=models.PositiveIntegerField(
                blank=True, help_text="Giới hạn thời gian làm bài (giây)", null=True
            ),
        ),
        migrations.AddField(
            model_name="interactiveexercise",
            name="achievements",
            field=models.ManyToManyField(
                blank=True,
                help_text="Các thành tích liên quan đến bài tập",
                related_name="exercises",
                to="advanced_learning.achievement",
            ),
        ),
        migrations.CreateModel(
            name="ExerciseSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("submission_content", models.TextField(help_text="Nội dung bài nộp")),
                (
                    "is_correct",
                    models.BooleanField(
                        default=False, help_text="Bài nộp có đúng không"
                    ),
                ),
                (
                    "feedback",
                    models.TextField(
                        blank=True, help_text="Phản hồi về bài nộp", null=True
                    ),
                ),
                (
                    "execution_time",
                    models.FloatField(
                        blank=True, help_text="Thời gian thực thi (giây)", null=True
                    ),
                ),
                (
                    "execution_result",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Kết quả thực thi",
                        null=True,
                    ),
                ),
                (
                    "points_earned",
                    models.PositiveIntegerField(
                        default=0, help_text="Điểm được thưởng"
                    ),
                ),
                (
                    "hints_used",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Các gợi ý đã sử dụng",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "exercise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="advanced_learning.interactiveexercise",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exercise_submissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserAchievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("earned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "progress",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Tiến trình đạt được thành tích",
                        null=True,
                    ),
                ),
                (
                    "achievement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_achievements",
                        to="advanced_learning.achievement",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "achievement")},
            },
        ),
    ]
